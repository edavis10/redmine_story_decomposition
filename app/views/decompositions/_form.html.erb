<% 
custom_field_ids = Setting.plugin_redmine_story_decomposition['custom_fields'] 
if custom_field_ids
  custom_fields = CustomField.find(custom_field_ids)
else
  custom_fields = []
end
%>
<fieldset id="<%= dom_id(issue) %>">
  <% fields_for (issue.new_record? ? 'new_subissue' : 'subissue[]'), issue do |ff| %>
    <table class="decomposition">
      <tr>
        <th><%= ff.label :assigned_to_id %></th>
        <th><%= ff.label :tracker_id %></th>  
        <th><%= ff.label :subject %></th>
    <%# TODO: Custom field - estimate low %>
    <%# TODO: Custom field - estimate high %>
    <%# TODO: Custom field - need estimate %>
    <% custom_fields.each do |field| %>
      <th><%= field.name %></th>
    <% end %>
      </tr>
      <tr>
        <td>
          <%= ff.select :assigned_to_id, (issue.assignable_users.collect {|m| [m.name, m.id]}), :include_blank => true %>
        </td>
        <td>
          <%= ff.select :tracker_id, @project.trackers.collect {|t| [t.name, t.id]}, :required => true %>
        </td>
        <td>
          <%= ff.text_field :subject, :class => 'subject' %>
        </td>
        <% custom_fields.each do |field| %>
        <td>
          <%= custom_field_tag(ff.object_name, CustomValue.new(:custom_field => field)) %>
        </td>
        <% end %>
      </tr>
    </table>
  <% end -%>

  <div class="contextual">
  <%=
    link_to_remote("Add task",
                   { 
                     :url => {:controller => 'decompositions', :action => @issue.new_record? ? 'new' : 'create', :project_id => @project},
                     :with => "$('issue-form').serialize()"
                   },
                   {
                     :id => 'addTaskLink',
                     :class => 'icon icon-add'
                   }) %>
  </div>
</fieldset>

